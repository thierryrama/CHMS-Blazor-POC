@inherits CultureChangeAwareComponent
@inject SiteSelectorViewModel ViewModel

<MudPaper id="site-selector" Elevation="0" Square="true" Outlined="false" Class="mud-theme-transparent">
    <MudSelect T="SiteSelectorViewModel.SelectableSite"
               ToStringFunc="selectableSite => selectableSite.Site.Name"
               AnchorOrigin="Origin.BottomCenter"
               Label="Current site" Placeholder="Select a site"
               Value="@ViewModel.SelectedSite" ValueChanged="async (newValue) => await OnValueChangeAsync(newValue)"
               AdornmentColor="Color.Inherit">
        @foreach (var (cycle, selectableSites) in ViewModel.SelectableSitesByCycle)
        {
            // This should be a <MudText> but there's a new bug (found 10 hours ago!) in MudBlazor that shows
            // the text outside the <MudSelect> :(
            //   See discussion:
            //     MudSelect group #1819
            //     https://github.com/MudBlazor/MudBlazor/discussions/1819
            <MudSelectItem Disabled="true" T="SiteSelectorViewModel.SelectableSite" Value="@null">
                <MudText Typo="Typo.h6" Class="">@cycle.Name</MudText>
            </MudSelectItem>
            @foreach (var selectableSite in selectableSites)
            {
                <MudSelectItem Value="@selectableSite"/>
            }
        }
    </MudSelect>
</MudPaper>

@code {
    private readonly MudTheme _theme = new();

    protected override async Task OnInitializedAsync()
    {
        await ViewModel.InitializeAsync();
    }

    private async Task OnValueChangeAsync(SiteSelectorViewModel.SelectableSite? selectableSite)
    {
        await ViewModel.SaveAsync(selectableSite);
    }
}